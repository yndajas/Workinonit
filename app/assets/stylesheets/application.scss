/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

@import 'colours';

html {
    position: relative;
    min-height: 100%;
}

body {
    padding-bottom: 60px;
    background-color: $base-light;
    color: $base-dark;

    .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI Semibold", "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    }
}

header {
    background-color: $base-dark;
    border-bottom: 1px solid $base-secondary;
}

main {
    padding-top: 20px;
    padding-bottom: 20px;
    
    // bullet point styling
    ul {
        padding-inline-start: 0px;
    }
    
    li {
        display: flex;
        margin-left: 18px;
        list-style-type: none;
        
        &::before {
            margin-right: 10px;
            content: "\2605";
            color: $base-accent;
            font-weight: bold;
        }
    }

    a {
        color: $base-accent;

        &:hover {
            color: #B71C1C;
        }
    }
}

footer {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 60px;
    background-color: $base-dark;
    border-top: 1px solid $base-secondary;

    button.navbar-text.btn.btn-light {
        color: $base-dark;
    }
}

// nav
nav {
    .navbar-brand h1 {
        font-size: 2.5rem;
        color: $base-light;
        margin-bottom: 0;
    }

    img {
        max-height: 75px;
        padding: 10px 0px;
        margin-right: 20px;
    }
}

// inputs
input[type=text], input[type=email], input[type=password], input[type=date], input[type=url], select, textarea, input[type=submit] {
    padding: 6px 12px;
    border-radius: .25rem;
    box-sizing: border-box;
    max-width: 100%;

    &:not(input[type=url]):not(select):not(textarea):not(input[type=submit]) {
        width: 250px;
    }

    &:not(input[type=submit]) {
        border: 2px solid $base-secondary;
    }

    // add margin-top to input + br + br + h3s (except for checkboxes) in order to make spacing consistent with the margin-bottom on checkbox containers
    + br + br + h3 {
        margin-top: 8px;
    }
}

@media screen and (min-width: 300px) {
    select {
        min-width: 250px;
    }
}

input[type=url] {
    width: 500px;
}

textarea {
    width: 750px;
    height: 250px;
    resize: both;
}

label:not(.checkbox-container) {
    font-weight: bold;
}

div#login, div#registration {
    input {
        height: 50px;
        padding: 10px;
        margin: 8px 0px;
    
        &[type=submit] {
            font-weight: bold;
        }
    }
}

// inputs: checkmarks
.checkbox-container {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
    cursor: pointer;

    // hide default checkbox
    input {
        position: absolute;
        opacity: 0;
        height: 0;
        width: 0;
        cursor: pointer;
    }

    // custom checkmark
    .checkmark {
        position: inline-block;
        height: 20px;
        width: 20px;
        padding: 0px 8px;
        border: 2px solid $base-secondary;
        border-radius: .25rem;
        box-sizing: border-box;

        // background colour when checkable but unchecked
        &:not(.disabled) {
            background-color: white;
        }
    }

    // background colour when hovered over a checkable but unchecked checkbox
    &:hover input:not(:checked) + .checkmark:not(.disabled) {
        background-color: $base-secondary;
    }

    // custom checkmark when checked
    input:checked + .checkmark {
        border-color: $base-accent;
        background-color: $base-accent;
    }

    .text {
        padding: 0px 8px;
        display: inline-block;
        vertical-align: middle;
    }
}

// login and registation forms
div {
    &#login, &#registration {
        width: 400px;
        margin: 0 auto;

        a {
            text-decoration: none;
            color: $base-dark;
        }

        input {
            width: 100%;
        }
    }
}

// job and application controls
form {
    &.job-action, &.application-action {
        display: inline;
    }
}

// Dilla
p#video-container {
    display: none;
    position: relative;
    padding: 30px 0px 57% 0px;
    height: 0;
    overflow: hidden;

    #video {
        display: block;
        width: 100%;
        margin: 0 auto;
        border: 0;    
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
    }
}

// scraped text overrides
div.job-description {
    li {
        display: list-item;
        text-indent: -23px;
        padding-left: 23px;
    }
}

// basic font class styling
.secondary-text {
    color: $base-secondary;
}

.star-divider {
    color: $base-accent;
    font-weight: bold;
}

.bold {
    font-weight: bold;
}

// Bootstrap button overrides
.btn {
    vertical-align: baseline;
}